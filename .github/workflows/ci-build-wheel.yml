name: CI Build Wheel
on:
  release:
    types:
      - created
  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    env:
      CIBW_ARCHS_LINUX: auto aarch64
      CIBW_ARCHS_MACOS: x86_64 universal2
      CIBW_ARCHS_WINDOWS: auto
      CIBW_ENVIRONMENT_LINUX: 'PATH="$PATH:/usr/share/rust/.cargo/bin:$HOME/.cargo/bin"'
      CIBW_ENVIRONMENT_MACOS: 'PATH="$PATH:/usr/share/rust/.cargo/bin:$HOME/.cargo/bin"'
      CIBW_ENVIRONMENT_WINDOWS: 'RUSTFLAGS="-Ctarget-feature=+crt-static"'
      CIBW_SKIP: "cp27-* cp34-* cp35-* pp*"
      CIBW_BEFORE_ALL_LINUX: "curl https://sh.rustup.rs -sSf | sh -s -- --default-toolchain stable -y && yum install -y openssl-devel"
      CIBW_BEFORE_BUILD: "python -m pip install --upgrade pip wheel setuptools setuptools_scm"
      CIBW_BUILD_VERBOSITY: 1

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install Rust aarch64-apple-darwin target
        if: runner.os == 'macOS'
        run: rustup target add aarch64-apple-darwin

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64

      - uses: actions/setup-python@v2
        name: Install Python
        with:
          python-version: '3.7'

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.1.3

      - uses: actions/upload-artifact@v2
        with:
          path: ./wheelhouse/*.whl
